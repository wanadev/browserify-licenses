#!/usr/bin/env node

"use strict";

const yargs = require("yargs");
const chalk = require("chalk");

const brlicenses = require("../app");
const pkg = require("../package.json");
const formats = require("../app/formats");

var argv = yargs

    .option("browserify", {
        describe: "Extract licenses used in a bundle using Browserify to find included modules (this option can be ommited)",
        alias: "b",
        type: "array",
        normalize: true
    })

    .option("webpack", {
        describe: "Extract licenses from a Webpack profile file",
        alias: "w",
        type: "array",
        normalize: true
    })

    .option("modules", {
        describe: "Extract licenses of the given modules",
        alias: "m",
        type: "array"
    })

    .option("json", {
        describe: "Extract licenses of the given JSON files (previously generated with the --format=json option)",
        alias: "j",
        type: "array",
        normalize: true
    })

    .option("format", {
        describe: "Output format",
        alias: "f",
        choices: Object.keys(formats),
        default: "table",
        nargs: 1
    })

    .option("output", {
        describe: "Output file (print to stdout by default)",
        alias: "o",
        nargs: 1,
        normalize: true
    })

    .option("ignore", {
        describe: "Ingore the given modules in the output",
        alias: "i",
        type: "array"
    })

    .version(pkg.version).alias("version", "v")
    .usage("Usage: brlicenses [options]")
    .help().alias("help", "h")
    .example("brlicenses app/index.js")
    .example("brlicenses --modules lodash q abitbol")
    .example("brlicenses app/index.js \\\n --json additional-licenses.json \\\n --format=full \\\n --output=CREDITS.txt")
    .locale("en")
    .argv;

if (!argv.browserify && !argv.webpack && !argv.modules && !argv.json && argv._.length === 0) {
    yargs.showHelp();
    process.exit(1);
}

if (argv._.length > 0) {
    if (!argv.browserify) {
        argv.browserify = argv._;
    } else {
        argv.browserify = argv.browserify.concat(argv._);
    }
}

if (argv.output) {
    chalk.enabled = false;
}

brlicenses(argv)
    .catch(function(error) {
        console.error(error);
        process.exit(1);
    });

